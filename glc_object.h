/****************************************************************************

 This file is part of the GLC-lib library.
 Copyright (C) 2005 Laurent Ribon (laumaya@users.sourceforge.net)
 Version 0.9, packaged on Novemeber, 2005.

 http://glc-lib.sourceforge.net

 GLC-lib is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 (at your option) any later version.

 GLC-lib is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with GLC-lib; if not, write to the Free Software
 Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

*****************************************************************************/

//! \file GLC_object.h Interface for the GLC_Object class.

#ifndef GLC_OBJECT_H_
#define GLC_OBJECT_H_

#include <QtOpenGL>
#include <string>

#include "glc_maths.h"

#include "glc_enum.h"


//////////////////////////////////////////////////////////////////////
//! \class GLC_Object
/*! \brief GLC_Object is base class for most GLC class*/

/*! GLC_Object is a abstract class. \n \n
 *  Every GLC_Object have :
 *		- unique ID #m_Uid generated by #GLC_GenID
 *		- virtual OpenGL method GLC_Object::GlExecute
 */
//////////////////////////////////////////////////////////////////////


class GLC_Object
{
//////////////////////////////////////////////////////////////////////
// Constructor / destructor
//////////////////////////////////////////////////////////////////////
public:		
	
	//! Default constructor
	/*! Create a GLC_Object , Generate is UID GLC_Object::m_Uid 
	 * and set GLC_Object::m_Name to pName*/
	//! \todo Add a constructor without name definition.
	GLC_Object(const char *pName);
	
	//! Virtual destructor
	virtual ~GLC_Object();

//////////////////////////////////////////////////////////////////////
// Get function
//////////////////////////////////////////////////////////////////////
public:
	//! Get Object ID
	GLC_uint	GetID() const;
	//! Get Object Name
	const char	*GetName() const;

//////////////////////////////////////////////////////////////////////
// Set function
//////////////////////////////////////////////////////////////////////
	//! Set Object Name
	void SetName(char *SetName);

//////////////////////////////////////////////////////////////////////
// OpenGL function
//////////////////////////////////////////////////////////////////////
	//! Virtual interface for OpenGL execution.
	/*! This Virtual function have to be implemented in GLC_Geometrie class.*/
	virtual bool GlExecute(GLenum Mode= GL_COMPILE_AND_EXECUTE) = 0;

//////////////////////////////////////////////////////////////////////
// Private member
//////////////////////////////////////////////////////////////////////

private:
	//! The Unique ID of an GLC_Object
	/*! Generated on GLC_Object creation*/
	GLC_uint		m_Uid;
	//! Name of an GLC_Object
	std::string		m_Name;
};
#endif //GLC_OBJECT_H_
